/* File:        config.h.in
 * Created:     00/05/04
 * Author:      Michel Hoche-Mong (hoche@grok.com)
 *
 * $Id: config.h.in,v 1.35 2001/08/04 08:37:24 hoche Exp $
 *
 * Based (loosely) on the original written for icb by Mark 
 * Giaquinto, copyright (C) 1991 
 */

#ifndef _CONFIG_H_
#define _CONFIG_H_


#define POLL_TIMEOUT   1   /* number of sec to wait in select before
                            * doing idle maintenance stuff. set to 0 to
                            * have no wait time, and -1 to have select
                            * block until there's activity.
                            */

#define USER_BUF_SIZE	257    /* max msg size + length byte + 1 (for null) */
#define	MSG_BUF_SIZE	BUFSIZ	/* for general purpose message buffer */
#define WARN		1
#define FATAL		2

/* File definitions */

#define USERDB "./icbdb"
#define ICBDLOG "./icbd.log"
#define ICBDMOTD "./motd"
#define ICBDHELP "./icbd_help"
#define ICBPEMFILE "./icbd.pem"


#undef	NO_DOUBLE_RES_LOOKUPS	/* define to disable double-reverse lookups */

#define DEFAULT_PORT 7326
#define DEFAULT_SSLPORT 7327
 
#define MAX_GROUPS	300	/* total groups */
#define MAX_FIELDS      20      /* fields in a packet */
#define MAX_GROUPLEN    8       /* chars in a group name */
#define MAX_IDLEN       12      /* chars in a login id */
#define MAX_INPUTSTR    (250 - MAX_NICKLEN - MAX_NICKLEN - 6) /* input line */
#define MAX_INVITES     50      /* invitations in a group */
#define MAX_NICKLEN     12      /* chars in a username */
#define MAX_NODELEN     64      /* chars in a node name */
#define MAX_NOPONG      600     /* seconds a client may not PONG a PING */
#define MAX_PASSWDLEN   12      /* chars in a user password */
#define MAX_REALLEN     64      /* chars in a real life name */
#define MAX_TEXTLEN     (80 - MAX_NICKLEN - 5)  /* max chars in a message */
#define MAX_TOPICLEN    32      /* chars in a group topic */
#define MAX_HUSHED      32      /* maximum number of hushed people */
#define MAX_NOTIFIES    40      /* maximum notifies allowed */

#define MAX_WRITES	20	        /* maximum writes allowed to nickname */
#define MAX_AWAY_LEN	(MAX_INPUTSTR - 17)
#define AWAY_NOSEND_TIME 10     /* don't send away messages to the same user
                                 * if you've already sent one within this 
                                 * number of seconds 
                                 */
#define MAX_SENDPACKET_QUEUE 10  /* maximum number of writes to queue up */
#define MAX_SENDPACKET_RETRIES 10  /* maximum number of retries per write */


/*
 * these are all of the idle behaviour settings
 */
/* maximum idle seconds before disconnect. 14400 = 4hrs, a good default */
#undef MAX_IDLE        /* note: undef to disable */

/* default secs before users are booted to IDLE_GROUP */
#define	DEF_IDLE_BOOT	3600

/* seconds before being disconnected that idle users are given a warning msg */
#define IDLE_WARN		240

/* the warning message displayed before being idle-disconnected */
#define	IDLE_WARN_MSG	"Your connection will be dropped in %d minutes due to idle timeout."

/* seconds before moderator in a group times out (for registered mods only) */
#define MOD_TIMEOUT		300

/* max secs before idle mods give up mod */
#define	MAX_IDLE_MOD	14400

/* maximum idle seconds that can be set for a group */
#define MAX_MOD_IDLE	600

/* default idle mod setting when a group is created */
#define	DEF_IDLE_MOD	3600

/*
 * in the following, %s is replaced with the nickname of the user for the
 * messages sent to other users in the group and "you" for the user being 
 * affected
 */

/* default msg for being idle booted from a group. */
#define	IDLE_BOOT_MSG	"A swarm of bats swoops down and carries %s away.";

/* default msg for a moderator losing mod from being too idle */
#define	IDLE_MOD_MSG		"A piano suddenly falls on %s, dislodging moderatorship of %s.";


#define PID_FILE "./icbd.pid"

#define ACCESS_FILE "./icbd.deny"

#define PERM_FILE "./icbd.perms"

/* Since sometimes gethostname doesn't do it right, if the hostname returned
   is SHORT_HOSTNAME, FQDN is used instead. These are only checked if they
   are defined.
*/
/* #define SHORT_HOSTNAME "icb"		*/
/* #define FQDN "default.icb.net"	*/

#define	IDLE_GROUP	"~IDLE~"	/* ~ will put it at the end */

#define	BOOT_GROUP	"~RESEDA~"	/* o/~ we are all going to reseda o/~ */

/* hostname to actually bind and listen as. set to null if you want to
   listen on all interfaces you have or depend on the -b flag */
/* #define BIND_HOSTNAME "default.icb.net" */


/************************************************************************
 * 
 * values set by configure
 *
 ************************************************************************/

/* define if you want debug messages */
#undef DEBUG 

/* Maximum number of users to allow. Must be one less than FD_SETSIZE
 * as defined in /usr/include/sys/types.h */
#undef MAX_USERS

/* The master password. Used to validate you as Admin */
#undef ADMIN_PASSWD

/* Define if you want to use OpenSSL */
#undef HAVE_SSL

/* Define if you have the strftime function.  */
#undef HAVE_STRFTIME

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
#undef HAVE_SYS_WAIT_H

/* Define as the return type of signal handlers (int or void).  */
#undef RETSIGTYPE

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#undef TIME_WITH_SYS_TIME

/* Define if your <sys/time.h> declares struct tm.  */
#undef TM_IN_SYS_TIME

/* Define if you have the gethostname function.  */
#undef HAVE_GETHOSTNAME

/* Define if you have the gettimeofday function.  */
#undef HAVE_GETTIMEOFDAY

/* Define if you have the select function.  */
#undef HAVE_SELECT

/* Define if you have the socket function.  */
#undef HAVE_SOCKET

/* Define if you have the strdup function.  */
#undef HAVE_STRDUP

/* Define if you have the snprintf function.  */
#undef HAVE_SNPRINTF

/* Define if you have the strerror function.  */
#undef HAVE_STRERROR

/* Define if you have the <fcntl.h> header file.  */
#undef HAVE_FCNTL_H

/* Define if you have the <time.h> header file.  */
#undef HAVE_TIME_H

/* Define if you have the <sys/time.h> header file.  */
#undef HAVE_SYS_TIME_H

/* Define if you have the <sys/file.h> header file.  */
#undef HAVE_SYS_FILE_H

/* Define if you have the <sys/ioctl.h> header file.  */
#undef HAVE_SYS_IOCTL_H

/* Define if you have the <sys/select.h> header file.  */
#undef HAVE_SYS_SELECT_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if you have the <stdarg.h> file */
#undef HAVE_STDARG_H

/* Define if you have the ndbm.h header file */
#undef HAVE_NDBM_H

/* Define if you have the gdbm/ndbm.h header file */
#undef HAVE_GDBM_NDBM_H

/* Define if you have the db1/ndbm.h header file */
#undef HAVE_DB1_NDBM_H

/* Define if you have the resolv library (-lresolv).  */
#undef HAVE_LIBRESOLV

/* Define if this system uses XOpen fdset.__fdsbits. Undef if it uses
 * the old-style fdset.fdsbits */
#undef HAVE_XOPEN_FDS_BITS

/* Define this if this system has socklen_t defined in <sys/socket.h> */
#undef HAVE_SOCKLEN_T

/*
 * here is where typdefs that depend on the above settings
 */
#ifndef	HAVE_SOCKLEN_T
typedef int socklen_t;
#endif

#endif /* _CONFIG_H_ */
