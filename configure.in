dnl File:        configure.in
dnl Created:     00/05/04
dnl Author:      Michel Hoche-Mong (hoche@grok.com)
dnl
dnl $Id: configure.in,v 1.19 2001/07/04 00:36:46 hoche Exp $
dnl


dnl standard startup stuff
AC_INIT
AC_CONFIG_SRCDIR([server/main.c])
AC_LANG(C)
AC_CONFIG_HEADER(config.h)
AH_TOP([#include "icb_config.h"])

AC_ARG_ENABLE(debugging,
[  --enable-debugging      Outputs extra debugging information at all
                          times.  Normally, you should not enable this,
                          but instead use the -D flag of the commands,
                          which toggles debbuging output at runtime.
  --disable-debugging     Disallows debugging code to be built in.
                          This might provide some speed benefits.],
    AC_DEFINE_UNQUOTED([DEBUG], 1, [Define to 1 to enable debugging output.]))

AC_ARG_WITH(ssl,
[  --with-ssl              Enable SSL using OpenSSL. (Experimental)],
    ssl="$with_ssl", ssl="no")

AC_ARG_WITH(max_users,
[  --with-max-users=<num>  Maximum number of users.],
    max_users="$with_max_users")

AC_ARG_WITH(admin_pwd,
[  --with-admin-pwd=<pwd>  REQUIRED. Password for the admin user. To
                          become the admin user, you will need to log in
                          with another user name that has the SAME password,
                          register (/p <password>), then become the admin
                          user (/name admin), and reregister (/p <password>).],
    admin_pwd="$with_admin_pwd")

AC_ARG_VAR(ADMIN_PWD, [Password for the admin user. Overridden by --with-admin-pwd])

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
if test "x$GCC" = "xyes"; then
    CFLAGS="$CFLAGS -Wall"
fi

AC_PROG_CPP
dnl these checks are inane. make them be useful, hoche. -hoche.
AC_CHECK_PROG(RM, rm, rm, rm)
AC_CHECK_PROG(AR, ar, ar, ar)
AC_CHECK_PROG(CTAGS, ctags, ctags, ctags)
AC_CHECK_PROG(LINT, lint, lint, lint)
AC_CHECK_PROG(CXREF, cxref, cxref, cxref)
AC_CHECK_PROG(COMPRESS, gzip, gzip, compress)
AC_CHECK_PROG(TAR, tar, tar, tar)
AC_CHECK_PROG(MAKEDEPEND, makedepend, makedepend, mkdep)
AC_PROG_RANLIB


dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h unistd.h stdarg.h time.h)
AC_CHECK_HEADERS(sys/file.h sys/ioctl.h sys/time.h sys/select.h)

dnl eff you, autoconf
dnl some linux systems (redhat) have ndbm.h in /usr/include/gdbm/ndbm.h
dnl other systems (debian/ubuntu) have ndbm.h in /usr/include/gdbm-ndbm.h
dnl autoconf maps both "gdbm/ndbm.h" and "gdbm-ndbm.h" to HAVE_GDBM_NDBM_H
dnl so we test for "./gdbm-ndbm.h", which maps to HAVE__GDMB_NDBM_H, with
dnl an extra underscore.
dnl almost everything else has it in just /usr/include/ndbm.h
ndbm=no
AC_CHECK_HEADERS(ndbm.h, ndbm=yes)
if test $ndbm = no; then
AC_CHECK_HEADERS(gdbm/ndbm.h, ndbm=yes)
fi
if test $ndbm = no; then
AC_CHECK_HEADERS(./gdbm-ndbm.h, ndbm=yes)
fi

dnl Checks for libraries.
dnl for those systems that use the gdbm/ndbm.h, look for gdbm lib
dnl compile and look for gdbm_version. If it exists, presume it's gdbm.
if test $ndbm = yes; then
    AC_CHECK_LIB(gdbm, gdbm_version, [LIBS="$LIBS -lgdbm -lgdbm_compat"], [], [-lgdbm_compat])
else
    AC_MSG_ERROR([Cannot find either gdbm or ndbm. Please install one or the other.])
fi

dnl do we have _res?
AC_CHECK_LIB(resolv, _res)
dnl check for solaris sockets and the extra libs solaris needs to link 'em
AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket -lnsl")

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl do we have socklen_t in sys/socket.h ?
AC_MSG_CHECKING(for socklen_t in sys/socket.h)
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[
        #include <sys/types.h>
        #include <sys/socket.h>
        ]],
        [[
            socklen_t foo;
        ]])
    ],
    [
        AC_MSG_RESULT([yes])
        AC_DEFINE_UNQUOTED([HAVE_SOCKLEN_T], 1, [Define to 1 if you have socklen_t.])
    ],
    [
        AC_MSG_RESULT([no])
    ])

dnl Do we have the XOpen fdset.__fds_bits or the alternate fdset.fds_bits?
AC_MSG_CHECKING(for XOpen fds_bits)
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[
        #include <sys/types.h>
        ]],
        [[
            fd_set fdset;
            long bits;
            bits = fdset.__fds_bits[0];
        ]])
    ],
    [
        AC_MSG_RESULT([yes])
        AC_DEFINE_UNQUOTED([HAVE_XOPEN_FDS_BITS], 1, [Define to 1 if you have the XOpen fdset.])
    ],
    [
        AC_MSG_RESULT([no])
        AC_DEFINE_UNQUOTED([HAVE_XOPEN_FDS_BITS], 0, [Define to 1 if you have the XOpen fdset.])
    ])
    
dnl Set Max users
ICB_AC_FD_SETSIZE
AC_MSG_CHECKING(max_users value)
if test x"$max_users" != x ; then
	if test $max_users -ge $ac_cv_icb_fd_setsize ; then
		AC_MSG_ERROR(max_users must be less than the FD_SETSIZE value in /usr/include/sys/types.h!)
	fi
else
	max_users=`expr $ac_cv_icb_fd_setsize - 1`
fi
AC_MSG_RESULT($max_users)
AC_DEFINE_UNQUOTED([MAX_USERS], $max_users, [Set to the maximum number of users you want to allow.])

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(gethostname gettimeofday select socket strdup strerror)
AC_CHECK_FUNCS(snprintf)

if test x"$ssl" != x"no" ; then
	ICB_AC_PATH_SSL
	if test x"$no_ssl" = x ; then
		AC_DEFINE_UNQUOTED([HAVE_SSL], 1, [Define to 1 if you want to use SSL.])
	fi
fi

if test x"$admin_pwd" = x ; then
    if test x"$ADMIN_PWD" != x ; then
        admin_pwd="$ADMIN_PWD"
    else
        AC_MSG_ERROR([either --with-admin-pwd must be used or the ADMIN_PWD environment variable must be set])
    fi
fi
AC_MSG_RESULT([Setting ADMIN_PWD to "$admin_pwd"])
AC_DEFINE_UNQUOTED([ADMIN_PWD], "$admin_pwd", [Sets the admin password.])

AC_CONFIG_FILES([server/Makefile murgil/Makefile Makefile])
AC_OUTPUT
