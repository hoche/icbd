dnl File:        configure.in
dnl Created:     00/05/04
dnl Author:      Michel Hoche-Mong (hoche@grok.com)
dnl
dnl $Id: configure.in,v 1.19 2001/07/04 00:36:46 hoche Exp $
dnl


dnl standard startup stuff
AC_INIT
AC_CONFIG_SRCDIR([server/main.c])
AC_LANG(C)
AC_CONFIG_HEADER(config.h)
AH_TOP([#include "icb_config.h"])

AC_ARG_ENABLE(debugging,
[  --enable-debugging      Outputs extra debugging information at all
                          times.  Normally, you should not enable this,
                          but instead use the -D flag of the commands,
                          which toggles debbuging output at runtime.
  --disable-debugging     Disallows debugging code to be built in.
                          This might provide some speed benefits.],
    AC_DEFINE_UNQUOTED([DEBUG], 1, [Define to 1 to enable debugging output.]))

AC_ARG_WITH(ssl,
[  --with-ssl              Enable SSL using OpenSSL. (Experimental)],
    ssl="$with_ssl", ssl="no")

AC_ARG_WITH(admin_passwd,
[  --with-admin-passwd=<passwd>  Password for admin user.],
    ac_cv_user_prompt_ADMIN_PASSWD="$with_admin_passwd")

AC_ARG_WITH(max_users,
[  --with-max-users=<num>       Maximum number of users.],
    max_users="$with_max_users")

dnl
dnl otherwise prompted information
dnl
AC_ARG_WITH(defaults,
[
Miscellaneous:
  --with-defaults         Use defaults for prompted values.],
    defaults="yes",defaults="no")

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
if test "x$GCC" = "xyes"; then
    CFLAGS="$CFLAGS -Wall"
fi

AC_PROG_CPP
dnl these checks are inane. make them be useful, hoche. -hoche.
AC_CHECK_PROG(RM, rm, rm, rm)
AC_CHECK_PROG(AR, ar, ar, ar)
AC_CHECK_PROG(CTAGS, ctags, ctags, ctags)
AC_CHECK_PROG(LINT, lint, lint, lint)
AC_CHECK_PROG(CXREF, cxref, cxref, cxref)
AC_CHECK_PROG(COMPRESS, gzip, gzip, compress)
AC_CHECK_PROG(TAR, tar, tar, tar)
AC_CHECK_PROG(MAKEDEPEND, makedepend, makedepend, mkdep)
AC_PROG_RANLIB


dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h unistd.h stdarg.h time.h)
AC_CHECK_HEADERS(sys/file.h sys/ioctl.h sys/time.h sys/select.h)

dnl some systems (redhat) have ndbm.h in /usr/include/gdbm/ndbm.h
dnl other systems (debian) have ndbm.h in /usr/include/db1/ndbm.h
dnl almost everything else has it in just /usr/include/ndbm.h
ndbm=no
AC_CHECK_HEADERS(ndbm.h, ndbm=yes)
if test $ndbm = no; then
AC_CHECK_HEADERS(gdbm/ndbm.h, ndbm=yes)
fi
if test $ndbm = no; then
AC_CHECK_HEADERS(db1/ndbm.h, ndbm=yes)
fi

dnl compile and look for gdbm_version. If it exists, presume it's gdbm.

dnl Checks for libraries.
dnl for those systems that use the gdbm/ndbm.h, look for gdbm lib
dnl (this may need to be fixed for systems that have ndbm in libgdbm, but
dnl have ndbm.h in /usr/include/ndbm.h. (SuSE?) )
if test $ndbm = yes; then
AC_CHECK_LIB(gdbm, gdbm_version, [LIBS="$LIBS -lgdbm -lgdbm_compat"], [], [-lgdbm_compat])
fi

dnl do we have _res?
AC_CHECK_LIB(resolv, _res)
dnl check for solaris sockets and the extra libs solaris needs to link 'em
AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket -lnsl")

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl do we have socklen_t in sys/socket.h ?
AC_MSG_CHECKING(for socklen_t in sys/socket.h)
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[
        #include <sys/types.h>
        #include <sys/socket.h>
        ]],
        [[
            socklen_t foo;
        ]])
    ],
    [
        AC_MSG_RESULT([yes])
        AC_DEFINE_UNQUOTED([HAVE_SOCKLEN_T], 1, [Define to 1 if you have socklen_t.])
    ],
    [
        AC_MSG_RESULT([no])
        AC_DEFINE_UNQUOTED([HAVE_SOCKLEN_T], 0, [Define to 1 if you have socklen_t.])
    ])

dnl Do we have the XOpen fdset.__fds_bits or the alternate fdset.fds_bits?
AC_MSG_CHECKING(for XOpen fds_bits)
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([[
        #include <sys/types.h>
        ]],
        [[
            fd_set fdset;
            long bits;
            bits = fdset.__fds_bits[0];
        ]])
    ],
    [
        AC_MSG_RESULT([yes])
        AC_DEFINE_UNQUOTED([HAVE_XOPEN_FDS_BITS], 1, [Define to 1 if you have the XOpen fdset.])
    ],
    [
        AC_MSG_RESULT([no])
        AC_DEFINE_UNQUOTED([HAVE_XOPEN_FDS_BITS], 0, [Define to 1 if you have the XOpen fdset.])
    ])
    
dnl Set Max users
ICB_AC_FD_SETSIZE
AC_MSG_CHECKING(max_users value)
if test x"$max_users" != x ; then
	if test $max_users -ge $ac_cv_icb_fd_setsize ; then
		AC_MSG_ERROR(max_users must be less than the FD_SETSIZE value in /usr/include/sys/types.h!)
	fi
else
	max_users=`expr $ac_cv_icb_fd_setsize - 1`
fi
AC_MSG_RESULT($max_users)
AC_DEFINE_UNQUOTED([MAX_USERS], $max_users, [Set to the maximum number of users you want to allow.])

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(gethostname gettimeofday select socket strdup strerror)
AC_CHECK_FUNCS(snprintf)

if test x"$ssl" != x"no" ; then
	ICB_AC_PATH_SSL
	if test x"$no_ssl" = x ; then
		AC_DEFINE_UNQUOTED([HAVE_SSL], 1, [Define to 1 if you want to use SSL.])
	fi
fi


dnl
dnl Prompt for various bits of user information
dnl

dnl stick more tests in here if you have other questions to ask
if test "x$ac_cv_user_prompt_ADMIN_PASSWD" = "x"; then
AC_CACHE_CHECK(if you have run configure before, ac_cv_have_warned,
[
if test "x$defaults" = "xno"; then
cat << EOF

     ************** Configuration Section **************

    You are about to be prompted by a series of questions.  Answer
them carefully, as they determine how the icbd is to function.

    After the configure script finishes, you can browse the newly
created config.h file for further - less important - parameters to
modify.  Be careful if you re-run configure though since config.h will
be over written.

-Press return to continue-
EOF

read tmpinput
ac_cv_have_warned="yes"
echo $ac_n "disabling above prompt for future runs...  $ac_c"
else
  ac_cv_have_warned="no"
fi
])
else
  ac_cv_have_warned="yes"
fi

if test "x$ac_cv_user_prompt_ADMIN_PASSWD" = "x"; then
AC_PROMPT_USER(ADMIN_PASSWD,[

*** Admin password

	Please pick a password for the admin user. To become the admin user, you
will need to log in with another user name that has the SAME password,
register (/p <password>), then become the admin user (/name admin), and
reregister (/p <password>).

Admin password], TheKey)
else
ADMIN_PASSWD="$ac_cv_user_prompt_ADMIN_PASSWD"
fi
AC_DEFINE_UNQUOTED(ADMIN_PASSWD, "$ADMIN_PASSWD", [Use as your server admin acount password.])

AC_CONFIG_FILES([server/Makefile murgil/Makefile Makefile])
AC_OUTPUT
